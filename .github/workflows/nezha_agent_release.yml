name: 更新 nezha agent 二进制文件

on:
  schedule:
    - cron: '0 0 * * 0' # 每周日 UTC 0点运行
  workflow_dispatch: # 手动触发

jobs:
  update_release:
    name: Download and Upload release
    runs-on: ubuntu-latest
    env:
      SOURCE_REPO: nezhahq/agent # 变量 1：上游 用户名/仓库名
      DOWNLOAD_FILE: nezha-agent_freebsd_arm64.zip # 变量 2：下载和保存的文件名
      TARGET_FOLDER: freebsd # 变量 3：创建的 release 文件夹名
      RENAMED_FILE: nezha_agent_arm64 # 变量 4：重命名后的文件名
      TARGET_TAG: arm64 # 变量 5：release 标签名
      UPLOAD_REPO: yutian81/serv00-ct8-ssh # 变量 6：上传到的 用户名/仓库名

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip

      - name: Download release
        run: |
          curl -sL https://github.com/${{ env.SOURCE_REPO }}/releases/latest/download/${{ env.DOWNLOAD_FILE }} -o ${{ env.DOWNLOAD_FILE }}
          mkdir -p ${{ env.TARGET_FOLDER }}
          unzip -o ${{ env.DOWNLOAD_FILE }} -d ${{ env.TARGET_FOLDER }}

      - name: Rename extracted file
        run: |
          # 获取解压后的第一个文件名
          FILE_NAME=$(ls ${{ env.TARGET_FOLDER }} | grep -v '/' | head -n 1)
          # 重命名文件
          mv ${{ env.TARGET_FOLDER }}/$FILE_NAME ${{ env.TARGET_FOLDER }}/${{ env.RENAMED_FILE }}

      - name: Check if release exists
        id: check_release
        run: |
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ env.UPLOAD_REPO }}/releases/tags/${{ env.TARGET_TAG }})
          echo "::set-output name=release_exists::$(echo $RESPONSE | grep -c 'Not Found')"

      - name: Create a new release if not exists
        id: create_release
        if: steps.check_release.outputs.release_exists == '1'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TARGET_TAG }}
          release_name: "Release ${{ env.TARGET_TAG }}"
          body: "Release for ${{ env.TARGET_TAG }} architecture"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to GitHub Release
        if: steps.check_release.outputs.release_exists == '1' || steps.create_release.outputs.upload_url != '' # 确保上传步骤只有在 release 已创建时才执行
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./freebsd/${{ env.RENAMED_FILE }}
          asset_name: ${{ env.RENAMED_FILE }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
